name: Spring API CI/CD with Maven
on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/workflows/maven-build.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/workflows/maven-build.yml'
    types: [opened, synchronize, reopened]
jobs:
  init-workflow:
    name: init workflow
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  project-build:
    name: Construct JAR
    runs-on: ubuntu-latest
    needs:
      - init-workflow
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Start MySQL
        run: sudo service mysql start
      - name: Create Database from script
        run: mysql -h 127.0.0.1 -P 3306 -u root mydb < infra/mysql/dump/springboot.sql
      - name: Install chrome Browser for selenium
        uses: browser-actions/setup-chrome@latest

      - name: run chrome Browser for version control
        run: chrome --version
      - name: set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Cache SonarCloud packages #installation de l'environnement pour sonarcloud
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages #installation de l'environnement pour maven
        uses: actions/cache@v4
        with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

      - name: Build jar and analyze SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Evan-highvolt_API_MyPlanetFoot

          # permet de charger un artefact
      - name: Charging artefact
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: target/*.jar
      #          retention-days: 10
      - run: echo "🍏 This job's status is ${{ job.status }}."

#    name: Build and analyze
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: Set up JDK 21
#        uses: actions/setup-java@v4
#        with:
#          java-version: 21
#          distribution: 'zulu' # Alternative distribution options are available.
#      - name: Cache SonarQube packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build and analyze
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Evan-highvolt_API_MyPlanetFoot